@{
    ViewBag.Title = "Mars Rover Visualizer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script language="javascript" type="text/javascript">

    // Draws a grid
    function drawGrid(cols, rows, div) {
        var tableMarkup = "";
        for (x = cols; x >= 0; x--) {
            tableMarkup += "<tr>";
            for (y = 0; y <= rows; y++) {
                tableMarkup += "<td id=" + x + "-" + y + ">" + x + "," + y + "</td>";
            }
            tableMarkup += "</tr>";
        }
        $(div).html(tableMarkup);
    };
</script>
	<div id="marsSurface" class="marsSurface"></div>



<!-- ************************** -->
	<!-- START OF EXPERIMENT -->
	<!-- ************************** -->

	<div id="experiment">
		<div id="background"></div>	
	</div>	

<!-- ************************** -->
	<!-- END OF EXPERIMENT -->
	<!-- ************************** -->

<h2 align="center">Mars Rover Visualizer</h2>

@*<div id="rover" class="roverAnimated"></div>
*@
<table id="terrainGrid" class="center"></table>
<div id="commands" class="commandWindow"></div>

<script language="javascript" type="text/javascript">

    var movementHistory;
    var terrainGrid = "#terrainGrid";
    var baseUrl = '@Url.Content("~")';

    $(terrainGrid).animate({
        opacity: 1,
        fontSize: "3em",
        borderWidth: "5px"
    }, 100);


    // draw the terrain grid using the plateau coordinate service
    $.post(baseUrl + "GetPlateauCoordinates", function (plateau) {
        drawGrid(plateau.X, plateau.Y, terrainGrid);
        $("#commands").append("Plateau: " + plateau.X + " " + plateau.Y + "<br/>");
    });


    // log rover's initial position
    $.post(baseUrl + "GetInitialPosition", function (coordinates) {
        $("#commands").append("Initial: " + coordinates.X + " " + coordinates.Y + " " + ConvertOrientation(coordinates.Orientation) + "<br/>");
        //$("#" + coordinates.X + "-" + coordinates.Y).addClass(GetRoverImage(coordinates.Orientation));
    });

   

    var movementHistoryData = [{ "X": 1, "Y": 2, "Orientation": 4 }, { "X": 0, "Y": 2, "Orientation": 4 }, { "X": 0, "Y": 2, "Orientation": 3 }, { "X": 0, "Y": 1, "Orientation": 3 }, { "X": 0, "Y": 1, "Orientation": 2 }, { "X": 1, "Y": 1, "Orientation": 2 }, { "X": 1, "Y": 1, "Orientation": 1 }, { "X": 1, "Y": 2, "Orientation": 1 }, { "X": 1, "Y": 3, "Orientation": 1 }];


    //drawGrid(5, 5, terrainGrid);



    // get history from rover history service
    $.post(baseUrl + "GetRoverHistory", function (movementHistoryData) {
        $.each(movementHistoryData, function (index) {

            var xCoordinate = movementHistoryData[index].X;
            var yCoordinate = movementHistoryData[index].Y;
            var orientation = ConvertOrientation(movementHistoryData[index].Orientation);
            var gridId = "#" + movementHistoryData[index].X + '-' + movementHistoryData[index].Y;

            console.log(xCoordinate + ' ' + yCoordinate + ' ' + orientation);



            $(document).ready(function () {
                $(gridId).addClass(GetRoverImage(movementHistoryData[index].Orientation));
                $(gridId).delay(index * 100).removeClass(GetRoverImage(movementHistoryData[index].Orientation));
                $(gridId).delay(index * 100).addClass('footprint');
            });








            $("#commands").delay(index * 1000).append(xCoordinate + ' ' + yCoordinate + ' ' + orientation + "<br/>").animate(
                        { opacity: '0.6' },
                        { queue: true, duration: 1000, specialEasing: { top: 'easeOutBack' }
                        });

            //$("#commands").append(xCoordinate + ' ' + yCoordinate + ' ' + orientation + "<br/>").delay(1000);



        });
    });

    $(document).ready(function () {
        $("#1-2").addClass('roverAnimateWest');
        $("#0-2").addClass('roverAnimateWest');
    });




    function GetRoverImage(orientation) {
        switch (orientation) {
            case 1:
                return "roverAnimateNorth";
            case 2:
                return "roverAnimateEast";
            case 3:
                return "roverAnimateSouth";
            case 4:
                return "roverAnimateWest";
            default:
                return  "rover";
        }
    }
    

    function ConvertOrientation(orientation) {
        switch (orientation) {
            case 1:
                return "N";
            case 2:
                return "E";
            case 3:
                return "S";
            case 4:
                return "W";
            default:
                return null;
        }
    }
    
    


</script>


